%dw 2.0
output application/json
var data = {
  "employees": [
    {
      "id": 1,
      "name": "John Doe",
      "department": "Finance"
    },
    {
      "id": 2,
      "name": "Jane Smith",
      "department": "Marketing"
    },
    {
      "id": 3,
      "name": "Bob Johnson",
      "department": "Engineering"
    }
  ]
}
---
{
  // Flatten a nested list
  flattenedList: flatten([1, 2, [3, 4, [5]]]),

  // Find the first even number
  findEvenNumber: [1, 2, 3, 4, 5] find (item) -> item mod 2 == 0,

  // Filter numbers greater than 3
  filteredItems: [1, 2, 3, 4, 5] filter (item) -> item > 3,

  // Flatten employees into names and IDs
  employeeFlattened: flatten(data.employees map ((employee) -> [employee.id, employee.name])),

  // Find an employee in the Marketing department
  findEmployee: data.employees find (employee) -> employee.department == "Marketing",

  // Filter employees in a department that starts with "F"
  filterEmployees: data.employees filter (employee) -> upper(employee.department[0]) == "F"
}
